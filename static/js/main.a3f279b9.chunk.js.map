{"version":3,"sources":["Conversor_moeda.js","Conversor_moeda2.js","App.js","reportWebVitals.js","index.js"],"names":["Conversor_moeda","props","state","cotacao","bind","axios","get","then","response","console","log","data","USDBRL","ask","fetch","res","json","valor_moeda","setState","moeda","parseFloat","toFixed","resultado","agora","valor_dig","valor_final","this","type","id","step","title","onChange","event","target","value","onClick","Component","Conversor_moeda2","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a3f279b9.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default class Conversor_moeda extends Component {\r\n    \r\n    constructor(props){\r\n        super(props)\r\n        this.state ={\r\n            //valor_moeda:\"\",\r\n            //moeda: \"\",\r\n            \r\n        }\r\n        this.cotacao = this.cotacao.bind(this)\r\n\r\n    }\r\n    \r\n\r\n    \r\n    cotacao(){\r\n        \r\n        axios.get(`https://economia.awesomeapi.com.br/last/USD-BRL`).then(response =>\r\n        console.log(response.data.USDBRL.ask));\r\n        // O axios acima é apenas para usar o console.log para ver se esta funcionando no console\r\n        let url = 'https://economia.awesomeapi.com.br/last/BRL-USD'\r\n        fetch(url)\r\n        .then(res=>{\r\n            return res.json()\r\n        })\r\n        .then(json=>{\r\n            var valor_moeda = json['BRLUSD'].ask\r\n            this.setState({valor_moeda})\r\n            let moeda = parseFloat(this.state.moeda).toFixed(2)\r\n            this.setState({moeda}) \r\n            let resultado = parseFloat(valor_moeda * moeda).toFixed(2) \r\n            this.setState({resultado}) \r\n            //TEXTO NO JSX, HTML\r\n            let agora = `REAL AGORA - U$1.00 = R$${parseFloat(this.state.valor_moeda).toFixed(2)}`\r\n            this.setState({agora})\r\n            let valor_dig = `R$${this.state.moeda} hoje é igual:`\r\n            this.setState({valor_dig})\r\n            let valor_final = `U$${this.state.resultado} Dolares`\r\n            this.setState({valor_final})\r\n        })\r\n        \r\n        console.log(this.state)\r\n        this.setState({\r\n            // valor_moeda:\"\",\r\n            //moeda:\"\",\r\n            \r\n        })\r\n\r\n        \r\n    }\r\n\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n            <h2>BRL para USD</h2>\r\n            <h2>{this.state.agora}</h2>\r\n            <nobr>R$</nobr>\r\n            <input type=\"number\" id=\"valor_input\" step=\".01\" title=\"Digite apenas números e ponto para centavos\" onChange={(event)=>{this.setState({moeda:event.target.value})}}></input>\r\n            <button type=\"button\" onClick={this.cotacao}>Converter</button>\r\n            <h2>{this.state.valor_dig} {this.state.valor_final}</h2>\r\n            \r\n        </div>\r\n        )\r\n        \r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default class Conversor_moeda2 extends Component {\r\n    \r\n    constructor(props){\r\n        super(props)\r\n        this.state ={\r\n            //valor_moeda:\"\",\r\n            //moeda: \"\",\r\n            \r\n        }\r\n        this.cotacao = this.cotacao.bind(this)\r\n\r\n    }\r\n    \r\n\r\n    \r\n    cotacao(){\r\n        \r\n        axios.get(`https://economia.awesomeapi.com.br/last/USD-BRL`).then(response =>\r\n        console.log(response.data.USDBRL.ask));\r\n        // O axios acima é apenas para usar o console.log para ver se esta funcionando no console\r\n        let url = 'https://economia.awesomeapi.com.br/last/USD-BRL'\r\n        fetch(url)\r\n        .then(res=>{\r\n            return res.json()\r\n        })\r\n        .then(json=>{\r\n            var valor_moeda = json['USDBRL'].ask\r\n            this.setState({valor_moeda})\r\n            let moeda = parseFloat(this.state.moeda).toFixed(2)\r\n            this.setState({moeda}) \r\n            let resultado = parseFloat(valor_moeda * moeda).toFixed(2) \r\n            this.setState({resultado}) \r\n            //TEXTO NO JSX, HTML\r\n            let agora = `DOLAR AGORA - R$1.00 = U$${parseFloat(this.state.valor_moeda).toFixed(2)}`\r\n            this.setState({agora})\r\n            let valor_dig = `U$${this.state.moeda} hoje é igual:`\r\n            this.setState({valor_dig})\r\n            let valor_final = `R$${this.state.resultado} Reais`\r\n            this.setState({valor_final})\r\n        })\r\n        \r\n        console.log(this.state)\r\n        this.setState({\r\n            // valor_moeda:\"\",\r\n            //moeda:\"\",\r\n            \r\n        })\r\n\r\n        \r\n    }\r\n\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n            <h2>Conversor de moeda</h2>\r\n            <h2>USD para BRL </h2>\r\n            <h2>{this.state.agora}</h2>\r\n            <nobr>U$</nobr>\r\n            <input type=\"number\" id=\"valor_input\" step=\".01\" title=\"Digite apenas números e ponto para centavos\" onChange={(event)=>{this.setState({moeda:event.target.value})}}></input>\r\n            <button type=\"button\" onClick={this.cotacao}>Converter</button>\r\n            <h2>{this.state.valor_dig} {this.state.valor_final}</h2>\r\n        </div>\r\n        )\r\n        \r\n    }\r\n}\r\n\r\n","import React from 'react';\nimport './App.css';\nimport Conversor_moeda from './Conversor_moeda';\nimport Conversor_moeda2 from './Conversor_moeda2';\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Conversor_moeda2></Conversor_moeda2>\n      <Conversor_moeda></Conversor_moeda>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}